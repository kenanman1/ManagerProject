// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    [Migration("20230926142708_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9b6c0a0-0b0a-4e1a-8f0a-0b9e8f0a0b9e"),
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("e2140b54-4f77-4006-9346-9ecb235c25eb"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("0e63a577-29c5-4c94-b7a4-dbf5eb22ad72"),
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("0e63a577-29c5-4c94-b7a4-dbf5eb22ad71"),
                            Name = "France"
                        },
                        new
                        {
                            Id = new Guid("597cf1a0-8839-49c2-b22c-0720f4849ea9"),
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("347f163c-84e5-4027-9238-a7c5492e5e51"),
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("291a5e65-34cf-4469-a38c-7b894a4cdf3a"),
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("1a1a6b6c-e200-4610-b414-582729b06891"),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("83e3a561-6a9a-47d0-a36c-3a4be2d2d58c"),
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("d21d5ba9-2944-4c6f-a679-da6559ca57cb"),
                            Name = "Brazil"
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = new Guid("485b9fe7-4d1a-4857-ac46-629ab1afb9b0"),
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("d9b6c0a0-0b0a-4e1a-8f0a-0b9e8f0a0b9e"),
                            Email = "kek@mail.ru",
                            Name = "Ivan",
                            Surname = "Ivanov"
                        },
                        new
                        {
                            Id = new Guid("2093a754-b63a-41ec-97f8-044472f31a1f"),
                            Address = "0110 3rd Plaza",
                            BirthDate = new DateTime(2003, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("0e63a577-29c5-4c94-b7a4-dbf5eb22ad72"),
                            Email = "lol@mail.ru",
                            Name = "Petr",
                            Surname = "Petrov"
                        },
                        new
                        {
                            Id = new Guid("4e0f16b2-5c69-4387-9e28-3d4e33cc9857"),
                            Address = "265 Tomscot Circle",
                            BirthDate = new DateTime(1999, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("0e63a577-29c5-4c94-b7a4-dbf5eb22ad71"),
                            Email = "keklol@mail.ru",
                            Name = "Sergey",
                            Surname = "Sergeev"
                        },
                        new
                        {
                            Id = new Guid("7b9b1720-fd26-415a-a592-80776cc30b59"),
                            Address = "269 new Tomscot Circle",
                            BirthDate = new DateTime(1995, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("0e63a577-29c5-4c94-b7a4-dbf5eb22ad71"),
                            Email = "mymail@mail.ru",
                            Name = "John",
                            Surname = "Sidorov"
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.HasOne("Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
