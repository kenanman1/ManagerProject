// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    [Migration("20230930095250_kek")]
    partial class kek
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9b6c0a0-0b0a-4e1a-8f0a-0b9e8f0a0b9e"),
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("76218353-37f7-4877-a65f-b064d742b83b"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("0e63a577-29c5-4c94-b7a4-dbf5eb22ad72"),
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("0e63a577-29c5-4c94-b7a4-dbf5eb22ad71"),
                            Name = "France"
                        },
                        new
                        {
                            Id = new Guid("d59bd064-31a0-4d24-b3ca-7fa6e9ee5d52"),
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("887eaf9b-591a-4b2b-8613-855d838e0568"),
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("4b3a2d8f-4f9b-4cf9-a8b8-f9792c5f65f5"),
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("b8bd7561-7bd5-4d0a-83b3-c5ceaff5631a"),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("7e91d66a-380f-4f8f-b51c-d445ac373941"),
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("d08cacbc-a826-4d80-b875-f57fc500e2b9"),
                            Name = "Brazil"
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1e421a5-c2c8-4e58-a7d1-a17b4e44d02a"),
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("d9b6c0a0-0b0a-4e1a-8f0a-0b9e8f0a0b9e"),
                            Email = "kek@mail.ru",
                            Name = "Ivan",
                            Surname = "Ivanov"
                        },
                        new
                        {
                            Id = new Guid("52f2344d-5ab7-4e26-82f1-8e1b172c095f"),
                            Address = "0110 3rd Plaza",
                            BirthDate = new DateTime(2003, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("0e63a577-29c5-4c94-b7a4-dbf5eb22ad72"),
                            Email = "lol@mail.ru",
                            Name = "Petr",
                            Surname = "Petrov"
                        },
                        new
                        {
                            Id = new Guid("736725b9-575f-4147-881a-2e2023e5e201"),
                            Address = "265 Tomscot Circle",
                            BirthDate = new DateTime(1999, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("0e63a577-29c5-4c94-b7a4-dbf5eb22ad71"),
                            Email = "keklol@mail.ru",
                            Name = "Sergey",
                            Surname = "Sergeev"
                        },
                        new
                        {
                            Id = new Guid("175f8729-91cf-4e81-af13-6211d440c814"),
                            Address = "269 new Tomscot Circle",
                            BirthDate = new DateTime(1995, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("0e63a577-29c5-4c94-b7a4-dbf5eb22ad71"),
                            Email = "mymail@mail.ru",
                            Name = "John",
                            Surname = "Sidorov"
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.HasOne("Entities.Country", "Country")
                        .WithMany("People")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
